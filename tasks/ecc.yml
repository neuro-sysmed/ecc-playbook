
- name: make dir for ecc
  file:
    path: "{{ ecc_root }}"
    owner: "{{ecc_user}}"
    state: directory

- name: Git checkout of ecc azure branch!
  git:
    repo: https://github.com/neuromics/ecc.git
    dest: "{{ ecc_root }}"
    force: true
    version: azure

- name: create venv in {{ ecc_root }}
  command:
    chdir: "{{  ecc_root }}"
    cmd: python3 -m venv venv
    creates: "{{  ecc_root }}/venv"

- name: update pip
  become: true
  become_user: "{{ecc_user}}"
  pip: 
    name: pip
    extra_args: --upgrade
    virtualenv: "{{  ecc_root }}/venv"

- name: Install specified python requirements for ecc
  become: true
  become_user: "{{ecc_user}}"
  pip:
    requirements: "{{  ecc_root }}/requirements.txt"
    virtualenv: "{{  ecc_root }}/venv"


- name: check if ssh-key exists
  become: true
  become_user: "{{ecc_user}}"
  stat:
    path: $HOME/.ssh/id_rsa
  register: ssh_key

- name: create ssh key for connecting to nodes
  become: true
  become_user: "{{ecc_user}}"
  command: ssh-keygen -t rsa -f $HOME/.ssh/id_rsa -q -P ""
  when: ssh_key.stat.exists == false

- name: fetch created public ssh key
  become: true
  become_user: "{{ecc_user}}"
  shell: cat ~/.ssh/id_rsa.pub
  register: ssh_pub_key_cat

- name: store pub-key to be used later
  set_fact:
    ssh_key: "{{ssh_pub_key_cat.stdout}}"

- name: Deploy ecc config file, will keep local copy if exists!
  template:
    src: templates/ecc/ecc.yaml.j2
    dest: "{{ecc_root}}/ecc.yaml"
    owner: "{{ecc_user}}"
    force: no

- name: install ecc-playbook in {{ ecc_playbook_root }}
  git:
    repo: https://github.com/neuromics/ecc-playbook.git
    dest: "{{ ecc_playbook_root }}"
  
- name: create venv in {{ ecc_playbook_root }}
  command:
    chdir: "{{ ecc_playbook_root }}"
    cmd: python3 -m venv venv
    creates: "{{ ecc_playbook_root }}/venv"

- name: update pip
  become: true
  become_user: "{{ecc_user}}"
  pip: 
    name: pip
    extra_args: --upgrade
    virtualenv: "{{  ecc_playbook_root }}/venv"

- name: Install specified python requirements for ecc-playbook
  become: true
  become_user: "{{ecc_user}}"
  pip:
    requirements: "{{  ecc_playbook_root }}/requirements.txt"
    virtualenv: "{{  ecc_playbook_root }}/venv"


- name: Install ecc-playbook ansible roles
  become: true
  become_user: "{{ecc_user}}"
  command:
    chdir: "{{  ecc_playbook_root }}"
    cmd: ./venv/bin/ansible-galaxy install -p roles -r requirements.yml

